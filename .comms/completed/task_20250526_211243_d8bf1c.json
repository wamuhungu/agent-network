{
  "message_type": "task_assignment",
  "task_id": "task_20250526_211243_d8bf1c",
  "from_agent": "manager",
  "to_agent": "developer",
  "timestamp": "2025-05-26T21:12:43+03:00",
  "priority": "high",
  "status": "assigned",
  "task": {
    "title": "Implement Simple Web Server",
    "description": "Create a lightweight HTTP web server that can serve static files and handle basic HTTP requests. This server should be built using Python's built-in libraries and follow REST principles.",
    "requirements": [
      "Use Python's http.server or socket libraries",
      "Serve static files from a designated directory",
      "Handle GET, POST, PUT, DELETE HTTP methods",
      "Implement proper HTTP status codes and headers",
      "Add logging functionality for requests",
      "Include error handling for common scenarios",
      "Follow coding standards in docs/standards/",
      "Write comprehensive tests"
    ],
    "deliverables": [
      "Working web server implementation",
      "Configuration file for server settings",
      "Test suite covering all endpoints",
      "Documentation with usage examples",
      "Error handling and logging"
    ],
    "subtasks": [
      {
        "id": "WS-001",
        "title": "Create basic HTTP server structure",
        "description": "Set up the foundational HTTP server class with request handling",
        "estimated_effort": "2 hours",
        "dependencies": []
      },
      {
        "id": "WS-002", 
        "title": "Implement static file serving",
        "description": "Add functionality to serve HTML, CSS, JS, and image files",
        "estimated_effort": "1.5 hours",
        "dependencies": ["WS-001"]
      },
      {
        "id": "WS-003",
        "title": "Add HTTP method handling",
        "description": "Implement GET, POST, PUT, DELETE request processing",
        "estimated_effort": "2 hours",
        "dependencies": ["WS-001"]
      },
      {
        "id": "WS-004",
        "title": "Implement logging and error handling", 
        "description": "Add comprehensive logging and graceful error handling",
        "estimated_effort": "1 hour",
        "dependencies": ["WS-002", "WS-003"]
      },
      {
        "id": "WS-005",
        "title": "Write tests and documentation",
        "description": "Create unit tests and user documentation",
        "estimated_effort": "1.5 hours", 
        "dependencies": ["WS-004"]
      }
    ],
    "context": {
      "project_root": ".",
      "target_directory": "src/webserver/",
      "coding_standards": "docs/standards/coding_standards.md",
      "test_directory": "tests/",
      "documentation_directory": "docs/"
    },
    "acceptance_criteria": [
      "Server starts and listens on configurable port",
      "Successfully serves static files with correct MIME types",
      "Handles all specified HTTP methods appropriately",
      "Returns proper HTTP status codes (200, 404, 500, etc.)",
      "Logs all requests with timestamps and response codes",
      "Handles concurrent requests gracefully",
      "Includes comprehensive error handling",
      "All tests pass with >90% code coverage",
      "Documentation includes setup and usage instructions"
    ]
  },
  "metadata": {
    "created_by": "manager",
    "assigned_to": "developer",
    "estimated_total_effort": "8 hours",
    "complexity": "medium",
    "dependencies": [],
    "tags": ["webserver", "http", "python", "backend"],
    "deadline": "2025-05-28T17:00:00+03:00"
  }
}